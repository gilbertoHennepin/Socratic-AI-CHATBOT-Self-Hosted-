import sys
import requests
from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QTextEdit,
    QLineEdit, QPushButton, QLabel
)
from PyQt5.QtCore import Qt

API_URL = "http://127.0.0.1:5000/chat"  # Flask backend

class ChatbotUI(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Socratic Tutor Chatbot")
        self.setGeometry(200, 200, 600, 500)

        layout = QVBoxLayout()

        self.chat_log = QTextEdit()
        self.chat_log.setReadOnly(True)
        self.chat_log.setStyleSheet("background-color: #1e1e1e; color: #f5f5f5; font-size: 14px;")
        layout.addWidget(self.chat_log)

        self.entry = QLineEdit()
        self.entry.setPlaceholderText("Type your message...")
        self.entry.returnPressed.connect(self.send_message)
        layout.addWidget(self.entry)

        self.send_btn = QPushButton("Send")
        self.send_btn.clicked.connect(self.send_message)
        layout.addWidget(self.send_btn)

        self.setLayout(layout)

    def send_message(self):
        user_message = self.entry.text().strip()
        if not user_message:
            return

        self.chat_log.append(f"<b>You:</b> {user_message}")
        self.entry.clear()

        try:
            response = requests.post(API_URL, json={"message": user_message})
            bot_reply = response.json().get("reply", "Error: No response")
        except Exception as e:
            bot_reply = f"Error: {str(e)}"

        self.chat_log.append(f"<b>Bot:</b> {bot_reply}\n")


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ChatbotUI()
    window.show()
    sys.exit(app.exec_())
